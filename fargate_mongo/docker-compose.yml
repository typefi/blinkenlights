version: '3.0'
services:
  blinkenlights:
    image: containers.typefi.com/blinkenlights:latest
    expose:
      - "8081"
    ports:
      - "8081:8081"
    networks:
      - backend
    depends_on:
      - mongo
    environment:
      NODE_CONFIG: '{"mongodb": "mongodb://mongo:27017/blinkenlights", "mongodbStore": "mongodb://mongo:27017/blinkenlightsSessions", "prometheusUrl": "http://localhost:9090/api/v1/query", "metricsUrl": "/grafana/d/JX28ZKfmz/blinkenlights?refresh=5s&orgId=1&var-Pool=All&var-Customer=All", "serverJobTimeout": "21600000"}'
      BL_LICENSE: "<blinkenlights-license-contact-sales-or-support>"
    logging:
      driver: awslogs
      options:
        awslogs-group: blinkenlights
        awslogs-region: us-east-1
        awslogs-stream-prefix: blinkenlights
  mongo:
    image: mongo:4.0.11
    restart: always
    volumes:
      - mongo-data:/data/db
    expose:
      - "27017"
    networks:
      - backend
  prometheus:
    image: containers.typefi.com/prometheus:latest
    volumes:
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - 9090:9090
    networks:
      - backend
    restart: always
  grafana:
    image: containers.typefi.com/grafana:latest
    ports:
      - 3002:3002
    depends_on:
      - prometheus  
    volumes:
      - grafana_data:/var/lib/grafana      
    networks:
      - backend
    restart: always
    environment:
      GF_INSTALL_PLUGINS: grafana-piechart-panel
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Viewer"
      GF_SERVER_HTTP_PORT: "3002"      
      GF_PATHS_PROVISIONING: "/etc/grafana/provisioning/"
      GF_SERVER_ROOT_URL: "%(protocol)s://%(domain)s/grafana/"
    logging:
      driver: awslogs
      options: 
        awslogs-group: blinkenlights
        awslogs-region: us-east-1
        awslogs-stream-prefix: grafana
  nginx:
    image: containers.typefi.com/nginx:latest
    depends_on:
      - blinkenlights
    ports:
      - "80:80"
      - "443:443"
    networks:
      - backend
    restart: always
    logging:
      driver: awslogs
      options:
        awslogs-group: blinkenlights
        awslogs-region: us-east-1
        awslogs-stream-prefix: nginx
networks:
  backend:
  
volumes:
  mongo-data:
  prometheus_data:
  grafana_data:
